/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.87
 * Generated at: 2024-04-17 09:31:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class writeForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1713258647340L));
    _jspx_dependants.put("/WEB-INF/board/../pages/header.jsp", Long.valueOf(1713258647332L));
    _jspx_dependants.put("jar:file:/D:/05/JSPStudy/week3/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/JSPStudyBBS03/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("/WEB-INF/board/../pages/footer.jsp", Long.valueOf(1713258647360L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("  <head>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("    <title>게시 글쓰기</title>\r\n");
      out.write("    <link href=\"bootstrap/bootstrap.min.css\" rel=\"stylesheet\" >\r\n");
      out.write("    <script src=\"js/jquery-3.3.1.min.js\"></script>\r\n");
      out.write("	<script src=\"js/formcheck.js\"></script> \r\n");
      out.write("  </head>\r\n");
      out.write("  <body>\r\n");
      out.write("  	<div class=\"container\">\r\n");
      out.write("  		<!-- header  -->\r\n");
      out.write("  		");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- header  -->\r\n");
      out.write("<div class=\"row border-bottom border-primary\">\r\n");
      out.write("	<div class=\"col-4\">\r\n");
      out.write("		<p><img src=\"https://via.placeholder.com/200x100\"></p>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div class=\"col-8\">\r\n");
      out.write("		<div class=\"row\">\r\n");
      out.write("			<div class=\"col\">\r\n");
      out.write("				<ul class=\"nav justify-content-end\">\r\n");
      out.write("					<li class=\"nav-item\">\r\n");
      out.write("						<a class=\"nav-link\" href=\"#\">로그인-폼</a>\r\n");
      out.write("					</li>\r\n");
      out.write("					<li class=\"nav-item\">\r\n");
      out.write("						<a class=\"nav-link\" href=\"#\">로그인-모달</a>\r\n");
      out.write("					</li>\r\n");
      out.write("					<li class=\"nav-item\">\r\n");
      out.write("						<a class=\"nav-link\" href=\"boardList\">게시 글 리스트</a>\r\n");
      out.write("					</li>\r\n");
      out.write("					<li class=\"nav-item\">\r\n");
      out.write("						<a class=\"nav-link\" href=\"#\">회원가입</a>\r\n");
      out.write("					</li>\r\n");
      out.write("					<li class=\"nav-item\">\r\n");
      out.write("						<a class=\"nav-link\" href=\"#\">주문/배송조회</a>\r\n");
      out.write("					</li>\r\n");
      out.write("					<li class=\"nav-item\">\r\n");
      out.write("						<a class=\"nav-link\" href=\"#\">고객센터</a>\r\n");
      out.write("					</li>\r\n");
      out.write("				</ul>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"row\">\r\n");
      out.write("			<div class=\"col text-end\">로그인시 인사말 출력</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</div>");
      out.write("\r\n");
      out.write("		<!-- content -->\r\n");
      out.write("		<div class=\"row my-5\" id=\"global-content\">\r\n");
      out.write("			<div class=\"col\">\r\n");
      out.write("				<div class=\"row text-center\">\r\n");
      out.write("					<div class=\"col\">\r\n");
      out.write("						<h2 class=\"fs-3 fw-bold\">게시 글쓰기</h2>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("				<!--		 \r\n");
      out.write("					form은 사용자로 부터 데이터를 입력받기 위한 폼 컨트롤들로 구성된다.\r\n");
      out.write("					사용자가 입력한 일반적인 데이터 즉 이름, 직업 등의 데이터는 문자열로 \r\n");
      out.write("					이루어진 데이터로 사용자가 submit 버튼을 클릭하게 되면 브라우저는\r\n");
      out.write("					이 데이터를 서버로 보내기 전에 페이지의 문자 셋을 기준으로 인코딩을 한 후\r\n");
      out.write("					서버로 전송하게 된다. 문자열로 이루어진 데이터를 브라우저가 인코딩 하는\r\n");
      out.write("					방식은 application/x-www-form-urlencoded 방식으로 form의\r\n");
      out.write("					기본 enctype 이다. 그래서 enctype을 생략할 수 있지만 파일과 같은\r\n");
      out.write("					데이터를 전송하기 위해서는 위의 인코딩 방식으로는 서버로 전송할 수 없다.\r\n");
      out.write("					파일은 문자열 형태의 데이터가 아닌 바이너리 형태의 데이터로 파일을 업로드\r\n");
      out.write("					하기 위해서는 form 태그의 전송방식을 method 속성에 post를 지정하고\r\n");
      out.write("					인코딩 타입(enctype)을 multipart/form-data로 지정해야 한다. \r\n");
      out.write("				-->	  \r\n");
      out.write("				<form name=\"writeForm\" action=\"writeProcess\" id=\"writeForm\" \r\n");
      out.write("					class=\"row g-3 border-primary\" method=\"post\" enctype=\"multipart/form-data\">\r\n");
      out.write("				  	<div class=\"col-4 offset-md-2\">\r\n");
      out.write("					    <label for=\"writer\" class=\"form-label\">글쓴이</label>\r\n");
      out.write("					    <input type=\"text\" class=\"form-control\" name=\"writer\"  id=\"writer\" \r\n");
      out.write("					    	placeholder=\"작성자를 입력해 주세요\">\r\n");
      out.write("			  		</div>\r\n");
      out.write("			  		<div class=\"col-4 \">\r\n");
      out.write("					    <label for=\"pass\" class=\"form-label\">비밀번호</label>\r\n");
      out.write("					    <input type=\"password\" class=\"form-control\" name=\"pass\"  id=\"pass\" >\r\n");
      out.write("			  		</div>\r\n");
      out.write("			  		<div class=\"col-8 offset-md-2\">\r\n");
      out.write("					    <label for=\"title\" class=\"form-label\">제 목</label>\r\n");
      out.write("					    <input type=\"text\" class=\"form-control\" name=\"title\"  id=\"title\" >\r\n");
      out.write("			  		</div>\r\n");
      out.write("					<div class=\"col-8 offset-md-2\">\r\n");
      out.write("					    <label for=\"content\" class=\"form-label\">내 용</label>\r\n");
      out.write("					    <textarea class=\"form-control\" name=\"content\" id=\"content\" rows=\"10\"></textarea>\r\n");
      out.write("			  		</div>\r\n");
      out.write("			  		<div class=\"col-8 offset-md-2\">\r\n");
      out.write("					    <label for=\"file1\" class=\"form-label\">파 일</label>\r\n");
      out.write("					    <input type=\"file\" class=\"form-control\" name=\"file1\"  id=\"file1\" >\r\n");
      out.write("			  		</div>			  		\r\n");
      out.write("			  		<div class=\"col-8 offset-md-2 text-center mt-5\">\r\n");
      out.write("					   <input type=\"submit\" value=\"등록하기\" class=\"btn btn-primary\"/>\r\n");
      out.write("							&nbsp;&nbsp;<input type=\"button\" value=\"목록보기\" \r\n");
      out.write("								onclick=\"location.href='boardList'\" class=\"btn btn-primary\"/>\r\n");
      out.write("			  		</div>	\r\n");
      out.write("				</form>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<!-- footer  -->\r\n");
      out.write("		");
      out.write("\r\n");
      out.write("<!-- footer -->\r\n");
      out.write("<div class=\"row border-top border-primary my-5\" id=\"global-footer\">\r\n");
      out.write("	<div class=\"col text-center py-3\">\r\n");
      out.write("		<p>고객상담 전화주문:1234-5678 사업자등록번호 :111-11-123456  \r\n");
      out.write("  	대표이사: 홍길동  통신판매업 서울 제 000000호<br/>\r\n");
      out.write("  	개인정보관리책임자:임꺽정 분쟁조정기관표시 : 소비자보호원, 전자거래분쟁중재위원회<br/>      	\r\n");
      out.write("  	Copyright (c) 2023 JSP2U Corp. All right Reserved.	\r\n");
      out.write("		</p>\r\n");
      out.write("	</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("    <script src=\"bootstrap/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("  </body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
